@model CongerHeatingAndCooling.Models.Manage.PricingTierModel
@using CHC.Entities.Services.OilDelivery
@using CHC.Entities.Customers;
@{
   var check = Session["IsLoggedIn"] as string;
}

@if (String.IsNullOrEmpty(check))
{
<div class="row">
    <div class="large-12 columns">
        <div class="panel transparent">
            @using (Html.BeginForm("Login", "Manage", FormMethod.Post, new { @id = "LoginForm", @data_abide = "" }))
            {
            <h1>Pricing &amp; Delivery Zone Management</h1>
            <br />
            <br />
            <div class="row">
                <div class="large-4 columns field-label text-right">
                    Enter Username:
                </div>
                <div class="large-4 columns">
                    <input type="text" id="Username" name="Username" required />
                    <small class="error">Please enter your username.</small>
                </div>
                <div class="large-2 columns">
                </div>
            </div>
            <div class="row">
                <div class="large-4 columns field-label text-right">
                    Enter Password:
                </div>
                <div class="large-4 columns">
                    <input type="password" id="Password" name="Password" required />
                    <small class="error">Please enter your password.</small>
                </div>
                <div class="large-2 columns">
                </div>
            </div>
            <div class="row">
                <div class="large-12 columns field-label text-center">
                    <button type="submit">Login</button>
                </div>
            </div>
            <br />
            <br />
            <br />
            <br />
            <br />}
        </div>
    </div>
</div>
}
else
{
<div class="row">
    <div class="large-12 columns">
        <div class="panel transparent">
            <h1>My Account</h1>
            <p><a href="#" class="feesLink" data-reveal-id="ChangePassword">Change Password</a> | <a href="~/manage/logout">Logout</a></p>
            <div id="ChangePassword" class="reveal-modal" data-reveal aria-labelledby="Change your password" aria-hidden="true" role="dialog">
                <div class="row">
                    <div class="panel transparent">
                        <div class="row">
                            <h1>Change Your Password</h1>
                            <a class="close-reveal-modal">&#215;</a>
                            @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @id = "ChangePasswordForm", @data_abide = "" }))
                            {
                            <div class="large-3 columns field-label">
                                Old Password:
                            </div>
                            <div class="large-3 columns field-label">
                                <input type="password" id="oldPassword" name="oldPassword" />
                            </div>
                            <div class="large-3 columns field-label">
                                New password:
                            </div>
                            <div class="large-3 columns field-label">
                                <input type="password" id="newPassword" name="newPassword" />
                            </div>}
                        </div>
                        <div class="row">
                            <div class="large-12 columns text-center">
                                <a class="button custom-close-reveal-modal">Submit</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @using (Html.BeginForm("Pricing", "Manage", FormMethod.Post, new { @id = "PricingForm", @data_abide = "" }))
            {
            <h1>Pricing</h1>
            <br />
            @Html.HiddenFor(m => m.PricingTier.ID)
            <div class="row">
                <div class="large-4 columns field-label">
                    Price Model Name
                </div>
                <div class="large-3 columns field-label">
                    Burner Restart Fee
                </div>
                <div class="large-4 columns field-label">
                    Credit Card Surcharge
                </div>
                <div class="large-1 columns field-label">
                </div>
            </div>
            <div class="row">
                <div class="large-4 columns">
                    @Html.TextBoxFor(m => m.PricingTier.Description)
                </div>
                <div class="large-2 columns">
                    @Html.TextBoxFor(m => m.PricingTier.BurnerPrimingFee)
                </div>
                <div class="large-1 columns">
                    &nbsp;
                </div>
                <div class="large-1 columns">
                    @Html.TextBoxFor(m => m.PricingTier.CreditCardSurcharge)
                </div>
                <div class="large-4 columns">
                    %
                </div>
            </div>
            <div class="row">
                <div class="large-2 columns field-label">
                    Starting Gallons
                </div>
                <div class="large-2 columns field-label">
                    Ending Gallons
                </div>
                <div class="large-2 columns field-label">
                    Price
                </div>
                <div class="large-6 columns field-label">
                </div>
            </div>
            @Html.EditorFor(m => m.PriceLevels, "PriceLevel")
            <div class="row">
                <div class="large-12 columns text-center">
                    <a class="button" href="#" id="AdjustPrices" data-reveal-id="globalPriceAdjuster">Adjust All</a>
                    <button id="AddPrice">+ Add Price</button>
                    <button type="submit" id="SavePricing">Save</button>
                </div>
            </div>
            <h1>Delivery Zone</h1>
            <h3>Below are the active towns in the current delivery area.</h3>
            <div class="flow">
                <ul>
                    @foreach (string townName in Model.ServiceAreas.ToList().Select(t => t.Town.Name).Distinct())
                    {
                    <li>@townName</li>}
                </ul>
            </div>
            <div class="row">
                <div class="large-12 columns text-center">
                    <a class="button" href="@Url.Action("ServiceArea", "Manage")">Edit</a>
                </div>
            </div>
            @Html.Partial("_GlobalPriceAdjuster")
}
        </div>
    </div>
</div>

}
@section scripts {
    <script type="text/javascript">
        $(function () {
            $('#AddPrice').on('click', function (event) {
                event.preventDefault();
                var row = $('.price:last');
                var clone = row.clone();

                $.each(clone.find('input'),
                    function (index, value) {
                        var input = $(value);
                        var index = parseInt(input.attr("id").match(/\d+/g), 10) + 1;
                        input.attr('id', input.attr('id').replace(/\d+/, index));
                        input.attr('name', input.attr('name').replace(/\d+/, index));
                        input.attr('value', '');
                    }
                );
                $.each(clone.find('.feesLink'),
                    function (index, value) {
                        var input = $(value);
                        var index = parseInt(input.attr("data-reveal-id").match(/\d+/g), 10) + 1;
                        input.attr('data-reveal-id', input.attr('data-reveal-id').replace(/\d+/g, index));
                    }
                );
                $.each(clone.find('.reveal-modal'),
                    function (index, value) {
                        var input = $(value);
                        var index = parseInt(input.attr("id").match(/\d+/g), 10) + 1;
                        input.attr('id', input.attr('id').replace(/\d+/g, index));
                    }
                );
                var deleteButton = clone.find('button');
                deleteButton.on('click', function (event) {
                    event.preventDefault();
                    var row = $(this).closest('.price').remove();
                    return false;
                });
                clone.insertAfter(row);
                $(document).foundation('reveal', 'reflow');
                return false;
            });
            $('#SavePricing').on('click', function () {
            });
            $('#ChangePassword .button').on('click', function () {
                var oldPassword = $('#ChangePassword #oldPassword').val();
                var newPassword = $('#ChangePassword #newPassword').val();

                var request = {
                    accountID: @Html.Raw(Session["Account"] == null ? -1 : ((Account)Session["Account"]).ID),
                    oldPassword: oldPassword,
                    newPassword: newPassword
                };
                $.ajax({
                    url: "changepassword",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(request),
                    success: function (result) {
                        alert('success');
                    },
                    failure: function (result) {
                        alert('Unable to reset your password, please try again.');
                    }
                });
                $(this).closest('.reveal-modal').foundation('reveal', 'close');
            });
            $('.fee .button').on('click', function () {
                $(this).closest('.reveal-modal').foundation('reveal', 'close');
            });
            $('#globalPriceAdjuster a.button').on('click', function () {
                $(this).closest('.reveal-modal').foundation('reveal', 'close');
            });
            $('#calculatePrices').on('click', function (event) {
                event.preventDefault();
                var increment = $(this).closest('.panel').find('#priceIncrement').val();
                var minPrice = $(this).closest('.panel').find('#minimumPrice').val();
                var prices = $('.ppg').toArray();
                var price = Number(minPrice) * 1000;
                var step = Number(increment) * 1000
                var ctrlVals = new Array();
                $.each(prices, function( index, ctrl ) {
                    ctrlVals.push({ ctrl: $(ctrl), price: Number($(ctrl).val()) * 1000 })
                });
                ctrlVals.sort(
                    function(a, b)
                    {
                        if (a.price == b.price) { return 0; }
                        if (a.price > b.price) { return 1; } else { return -1; }
                    });

                for(var i = 0; i < ctrlVals.length; i++) {
                    var ctrl = $(ctrlVals[i].ctrl);
                    ctrl.val( (price / 1000).toFixed(3) );
                    price = (price + step);
                }
                $(this).closest('.reveal-modal').foundation('reveal', 'close');
                return false;
            });

            $('.delete-price').on('click', function (event) {
                event.preventDefault();
                var row = $(this).closest('.price').remove();
                return false;
            });
            $(document).foundation('reveal', 'open', {
                root_element: 'form'
            });
        });
    </script>
}
